#The basedir you want to use
#basedir = .

#The outlet to use to store code artefacts
#outlet.src.dir = ./src/generated/java

# The outlet to use to store non-code artefacts (configurations, sql-files and so on)
#outlet.res.dir = ./src/generated/resources

#The outlet to use to store code artefacts. At this the generator will checking
#whether the artifact to generate already exists. If yes the generation of this
#artifact will be skipped.
#outlet.src.once.dir = ./src/main/java

#The outlet to use to store non-code artefacts. At this the generator will checking
#whether the artifact to generate already exists. If yes the generation of this
#artifact will be skipped.
#outlet.res.once.dir = ./src/main/resources

#Here you can enter the path to the xmi file you want to use for code-generation
#You can point to the packed xmi: argouml_model.zargo, poseidon_model.zuml
model.file = ${basedir}/src/main/resources/model/DummyModel.uml
javabasic.profile.file = ${basedir}/src/main/resources/model/javabasic.profile.uml

#The expression used to find the modelelement and template to start with
expandExpression = org::fornax::cartridges::uml2::javabasic::templates::Root::Root FOR model

#The log4j configuration to use
#log4jConfigFile=./log4j.properties

#The path to file to use as dump file
dumpfile=${basedir}/dump.dump